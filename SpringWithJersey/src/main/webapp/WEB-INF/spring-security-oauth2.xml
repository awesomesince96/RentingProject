<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:oauth="http://www.springframework.org/schema/security/oauth2"
	xmlns:sec="http://www.springframework.org/schema/security"

	xsi:schemaLocation="http://www.springframework.org/schema/beans
                      http://www.springframework.org/schema/beans/spring-beans.xsd
            http://www.springframework.org/schema/security/oauth2
            http://www.springframework.org/schema/security/spring-security-oauth2.xsd
            http://www.springframework.org/schema/security
            http://www.springframework.org/schema/security/spring-security.xsd">


	<oauth:authorization-server
		client-details-service-ref="client-details-jdbcservice"
		token-services-ref="tokenServices" token-endpoint-url="/api/login">
		<oauth:refresh-token />
		<oauth:password />
	</oauth:authorization-server>

	<oauth:resource-server id="resourceServerFilter"
		token-services-ref="tokenServices" />

	<bean id="oAuth2TokenEndpointFilter" class="com.springwithjersey.oAuth2.OAuth2TokenEndpointFilter">
		<property name="authenticationManager" ref="userAuthenticationManager" />
	</bean>

	<bean id="clientCredentialsTokenEndpointFilter"
		class="org.springframework.security.oauth2.provider.client.ClientCredentialsTokenEndpointFilter">
		<property name="authenticationManager" ref="clientAuthenticationManager" />
	</bean>

	<bean id="clientAuthenticationEntryPoint"
		class="org.springframework.security.oauth2.provider.error.OAuth2AuthenticationEntryPoint">
		<property name="typeName" value="Basic" />
		<property name="exceptionTranslator" ref="oAuthExceptionTranslator" />
	</bean>

	<bean id="oauthAuthenticationEntryPoint"
		class="org.springframework.security.oauth2.provider.error.OAuth2AuthenticationEntryPoint">
		<property name="realmName" value="test" />
		<property name="exceptionTranslator" ref="oAuthExceptionTranslator" />
	</bean>

	<bean id="oauthAccessDeniedHandler"
		class="org.springframework.security.oauth2.provider.error.OAuth2AccessDeniedHandler">
		<property name="exceptionTranslator" ref="oAuthExceptionTranslator" />
	</bean>


	<bean id="tokenServices"
		class="org.springframework.security.oauth2.provider.token.DefaultTokenServices">
		<property name="tokenStore" ref="tokenStore" />
		<property name="supportRefreshToken" value="true" />
		<property name="clientDetailsService" ref="client-details-jdbcservice" />
		<property name="reuseRefreshToken" value="false" />
	</bean>

	<bean id="tokenStore" class="com.springwithjersey.oAuth2.OAuth2JdbcTokenStore">
		<constructor-arg name="dataSource" ref="mySqlDataSource" />
	</bean>

	<sec:http pattern="/api/login" create-session="stateless"
		auto-config="true" authentication-manager-ref="clientAuthenticationManager">
		<sec:anonymous enabled="false" />
		<sec:intercept-url pattern="/api/login" access="IS_AUTHENTICATED_FULLY" />
		<sec:http-basic entry-point-ref="clientAuthenticationEntryPoint" />
		<sec:access-denied-handler ref="oauthAccessDeniedHandler" />
		<sec:custom-filter ref="clientCredentialsTokenEndpointFilter"
			before="BASIC_AUTH_FILTER" />
	</sec:http>

	<sec:http pattern="/**" create-session="never"
		entry-point-ref="oauthAuthenticationEntryPoint">

		<sec:anonymous enabled="false" />
		<sec:intercept-url pattern="/**" access="IS_AUTHENTICATED_FULLY" />
		<sec:custom-filter ref="resourceServerFilter"
			before="PRE_AUTH_FILTER" />
		<sec:access-denied-handler ref="oauthAccessDeniedHandler" />
	</sec:http>

	<sec:authentication-manager alias="userAuthenticationManager">
		<sec:authentication-provider
			user-service-ref="clientDetailsUserService">
			<sec:password-encoder ref="passwordEncoder" />
		</sec:authentication-provider>
	</sec:authentication-manager>

	<sec:authentication-manager id="clientAuthenticationManager"
		xmlns="http://www.springframework.org/schema/security">
		<sec:authentication-provider
			user-service-ref="client-details-user-service" />
	</sec:authentication-manager>

	<bean id="oAuthExceptionTranslator"
		class="com.springwithjersey.oAuth2.OAuth2WebResponseExceptionTranslator" />

	<bean id="passwordEncoder"
		class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder">
		<constructor-arg name="strength" value="11" />
	</bean>

	<bean id="accessDecisionManager"
		class="org.springframework.security.access.vote.AffirmativeBased"
		xmlns="http://www.springframework.org/schema/beans">
		<constructor-arg>
			<list>
				<bean class="org.springframework.security.access.annotation.Jsr250Voter" />
				<bean class="org.springframework.security.access.vote.AuthenticatedVoter" />
			</list>
		</constructor-arg>
	</bean>

	<sec:global-method-security
		jsr250-annotations="enabled" access-decision-manager-ref="accessDecisionManager" />

	<oauth:expression-handler id="oauthExpressionHandler" />

	<oauth:web-expression-handler id="oauthWebExpressionHandler" />

	<bean id="client-details-user-service"
		class="org.springframework.security.oauth2.provider.client.ClientDetailsUserDetailsService">
		<constructor-arg ref="client-details-jdbcservice" />
	</bean>

	<bean id="client-details-jdbcservice"
		class="com.springwithjersey.oAuth2.OAuth2JdbcClientDetailsService">
		<constructor-arg name="dataSource" ref="mySqlDataSource" />
	</bean>

	<bean id="clientDetailsUserService" class="com.springwithjersey.oAuth2.OAuth2UserDetailsService">
		<constructor-arg name="dataSource" ref="mySqlDataSource" />
		<constructor-arg name="passwordEncoder" ref="passwordEncoder" />
	</bean>

</beans>
